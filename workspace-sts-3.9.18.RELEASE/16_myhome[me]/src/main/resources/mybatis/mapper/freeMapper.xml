<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdu.myhome.dao.FreeMapper">
  
  <!-- 원글 달기 -->
  <insert id="insertFree" parameterType="FreeDto">
    INSERT INTO FREE_T (
        FREE_NO
      , EMAIL
      , CONTENTS
      , CREATED_AT
      , STATUS
      , DEPTH
      , GROUP_NO
      , GROUP_ORDER
    ) VALUES (
        FREE_SEQ.NEXTVAL
      , #{email}
      , #{contents}
      , SYSTIMESTAMP
      , 1
      , 0
      , FREE_SEQ.CURRVAL
      , 0
    )
  </insert>

  <!-- 목록 구할 때 필요 : 파라미터는 없고 결과를 int로 반환하는 getFreeCount -->
  <select id="getFreeCount" resultType="int">
    SELECT COUNT(*)
      FROM FREE_T
  </select>

  <select id="getFreeList" parameterType="Map" resultType="FreeDto">
    SELECT FREE_NO, EMAIL, CONTENTS, CREATED_AT, STATUS, DEPTH, GROUP_NO, GROUP_ORDER
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY GROUP_NO DESC, GROUP_ORDER ASC) AS RN, FREE_NO, EMAIL, CONTENTS, CREATED_AT, STATUS, DEPTH, GROUP_NO, GROUP_ORDER
              FROM FREE_T)
     WHERE RN BETWEEN #{begin} AND #{end}
  </select>
  
  <!-- 댓글 달기 1: 기존 댓글들의 GROUP_ORDER를 증가시키기 -->
  <update id="updateGroupOrder" parameterType="FreeDto"> <!-- parameterType="FreeDto"는 원글을 의미함 -->
    UPDATE FREE_T
       SET GROUP_ORDER = GROUP_ORDER + 1
     WHERE GROUP_NO = #{groupNo}     <!-- <= FreeDto의 groupNo임. FreeDto에 들어있는 GROUP_NO 와 같은 값을 가졌다. -->
       AND GROUP_ORDER > #{groupOrder}
  </update>
  
  <!-- 댓글 달기 2 : 댓글 삽입하기 -->
  <insert id="insertReply" parameterType="FreeDto"> <!-- 여기에서의 FreeDto는 원글DTO가 아니라, 댓글의DTO이다. (사실 같은 DTO를 공유하기 때문에 같지만, 의미부여상 다르게 말한다. -->
    INSERT INTO FREE_T (
        FREE_NO
      , EMAIL
      , CONTENTS
      , CREATED_AT
      , STATUS
      , DEPTH
      , GROUP_NO
      , GROUP_ORDER
    ) VALUES (
        FREE_SEQ.NEXTVAL
      , #{email}
      , #{contents}
      , SYSTIMESTAMP
      , 1
      , #{depth}   <!-- 이미 전달된 댓글에 작업이 되어 있으니 꺼내서 쓰기만 하면 된다. -->
      , #{groupNo}
      , #{groupOrder}
    )
  </insert>
  
  <!-- 게시글 삭제 -->
  <update id="deleteFree" parameterType="int">
    UPDATE FREE_T
       SET STATUS = 0
     WHERE FREE_NO = #{freeNo}
  </update>
  
  <!-- 검색 결과 개수 -->
  <!-- 
  [ 묶어줄 때 사용할 수 있는 방법 2가지 ]
   1.  ${} 전달된 값을 그대로 사용한다. ($ 사용하는 경우 : 쿼리문을 구성하는  구문 자체를 처리할 때 사용한다.
   2.  #{} 전달된 값을 따옴표('')로 묶어서 사용한다.
   -->
  <select id="getSearchCount" parameterType="Map" resultType="int"> <!-- column, query 둘 다 저장해주기 위해 Map을 쓴다. -->
    SELECT COUNT(*)
      FROM FREE_T
     WHERE STATUS = 1      <!-- 1일 때 검색된다. 0일 때는 비정상게시물로 검색되지 않는다. -->
       AND ${column} LIKE '%' || #{query} || '%'
  </select>
  
  <!-- 검색 결과 목록 -->
  <select id="getSearchList" parameterType="Map" resultType="FreeDto">
    SELECT FREE_NO, EMAIL, CONTENTS, CREATED_AT, STATUS, DEPTH, GROUP_NO, GROUP_ORDER
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY GROUP_NO DESC, GROUP_ORDER ASC) AS RN, FREE_NO, EMAIL, CONTENTS, CREATED_AT, STATUS, DEPTH, GROUP_NO, GROUP_ORDER
              FROM FREE_T
             WHERE STATUS = 1   <!-- 1일 때 검색된다. 0일 때는 비정상게시물로 검색되지 않는다. -->
               AND ${column} LIKE '%' || #{query} || '%')
     WHERE RN BETWEEN #{begin} AND #{end}
  </select>  
  
  
  
  
  
  
  
  
  

</mapper>