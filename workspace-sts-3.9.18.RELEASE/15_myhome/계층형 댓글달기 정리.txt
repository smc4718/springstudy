10월 26일 (목)

< 계층형 게시판  >

* 계층형 게시판은 댓글을 달 줄 알아야 할 줄 아는 것.

원글            (부모)
 ㄴ댓글         (자식)(대댓글의 부모)
     ㄴ대댓글   (자식)(대댓글 입장에서 댓글이 원글)

↓↓↓↓↓

1.원글 작성
DEPTH	      0
GROUP_NO     원글 번호
GROUP_ORDER   0


2.댓글 작성
                    DEPTH           원글 DEPTH + 1
 새로 달린 댓글     GROUP_NO        원글 GROUP_NO
                    GROUP_ORDER     원글 GROUP_ORDER + 1

  기존 댓글      →    원글과 같은 GROUP_NO를 가진 게시물 중에서 원글의 GROUP_ORDER보다
 (선행작업)	           큰 GROUP_ORDER값을 가진 게시물들의 GROUP_ORDER값을 1씩 증가시킨다.


예시 테이블)
FREE_NO 	 CONTENTS(댓글)        DEPTH    GROUP_NO      GROUP_ORDER
   1      오늘 점심 메뉴(원글)	     0 	       1	           0 
   2  	   ㄴ1.김치찌개(댓글)	     1	       1               1->2->3 (댓글구분 위해 GROUP_ORDER 값을 1씩 증가)     
   3       ㄴ2.짬뽕(댓글)	         1         1               1->2
   4       ㄴ3.분식(댓글)	         1         1               1
   5         ㄴ(1)나도 이거요(김찌)  2         1               4->5    (김찌의 대댓글)
   6         ㄴ(2)나도 이거요(김찌)  2         1               4	   (김찌의 대댓글)
*GROUP_ORDER는 같은 값을 가질 수 없다(순서). 댓글 정렬은 없는 상태.



[ 정렬하는 방법 ]
항상 최신 게시글이 상단으로 올라오는 방식 ↓
1차 정렬	    GROUP_NO DESC
2차 정렬	    GROUP_ORDER ASC

▶ 2차정렬 예시 - 정렬이 적용된 후)
FREE_NO 	 CONTENTS(댓글)      	 DEPTH    GROUP_NO   GROUP_ORDER
   1      오늘 점심 메뉴(원글)	       0         1	          0 
   4       ㄴ3.분식(댓글)	           1         1            1
   3       ㄴ2.짬뽕(댓글)	           1         1            1->2
   2  	   ㄴ1.김치찌개(댓글)	       1	     1 	          1->2->3 (댓글구분 위해 GROUP_ORDER 값을 1씩 증가)     
   6         ㄴ(2)나도 이거요(김찌)    2         1            4	      (김찌의 대댓글)
   5         ㄴ(1)나도 이거요(김찌)    2         1            4->5    (김찌의 대댓글)

-------------------------------------

[ 댓글 달기 순서 ]

※ insert 와 update 가 동시에 수행해야 하니까 ServiceImpl 클래스에 트랜잭션을 걸어주어야 한다.

1.
댓글 정보(EDITOR, CONTENTS)	       -> 정보가 들어오면 받아 놓기,
원글 정보(DEPTH, GROUP_NO, GROUP_ORDER) -> 정보가 들어오면 받아 놓기,
※(중요)목록창에서 5가지 정보 만들어서 넘겨주기 = 계층형에서 제일 어려운 부분.
위 5개 칼럼(EDITOR, CONTENTS, DEPTH, GROUP_NO, GROUP_ORDER) 전부 다 원글DTO와 댓글DTO를 만들어서 작업해줘야 한다.

2.
원글DTO 만들기

3.
기존댓글업데이트 하기(원글DTO)

4.
댓글DTO 만들기

5.
댓글삽입 = DTO 전달해서 저장시키기

---------------------------------------------

[ 실제 작업 순서 ]

1. 매퍼.xml 에서 기존 댓글들의 GROUP_ORDER를 증가시키는 쿼리문 작성(update 사용)
※댓글, 원글 모두 하나의 테이블에서 작성되는 거기 때문에 같은 DTO를 공유할 수 밖에 없다.

2. 댓글 삽입하는 쿼리문 작성(insert 사용)
※여기에서의 FreeDto는 원글DTO가 아니라, 댓글의DTO이다. (사실 같은 DTO를 공유하기 때문에 같지만, 의미부여상 구분해주기 위해 다른 것처럼 말한다.)

3. 매퍼.java 작성

4. Service 작성 (메소드 이름만 바꾸기)

5. ServiceImpl 작성

6. list.jsp 작성
